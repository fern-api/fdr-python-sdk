# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...commons.types.endpoint_path_literal import EndpointPathLiteral
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .snippets_by_endpoint_method import SnippetsByEndpointMethod


class SnippetsPage(UniversalBaseModel):
    next: typing.Optional[int] = pydantic.Field(default=None)
    """
    If present, pass this into the `page` query parameter to load the next page.
    """

    snippets: typing.Dict[EndpointPathLiteral, SnippetsByEndpointMethod] = pydantic.Field()
    """
    The snippets are returned as a map of endpoint path (e.g. `/api/users`) 
    to a map of endpoint method (e.g. `POST`) to snippets.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
