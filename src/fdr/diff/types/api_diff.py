# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .added_endpoint import AddedEndpoint
from .removed_endpoint import RemovedEndpoint
from .updated_endpoint import UpdatedEndpoint


class ApiDiff(UniversalBaseModel):
    added_endpoints: typing_extensions.Annotated[typing.List[AddedEndpoint], FieldMetadata(alias="addedEndpoints")]
    removed_endpoints: typing_extensions.Annotated[
        typing.List[RemovedEndpoint], FieldMetadata(alias="removedEndpoints")
    ]
    updated_endpoints: typing_extensions.Annotated[
        typing.List[UpdatedEndpoint], FieldMetadata(alias="updatedEndpoints")
    ]
    markdown: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
