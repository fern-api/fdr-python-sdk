# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...commons.types.endpoint_identifier import EndpointIdentifier
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .path_parameter_diff import PathParameterDiff
from .query_parameter_diff import QueryParameterDiff
from .request_body_diff import RequestBodyDiff
from .response_body_diff import ResponseBodyDiff


class UpdatedEndpoint(UniversalBaseModel):
    id: EndpointIdentifier
    path_parameter_diff: typing_extensions.Annotated[PathParameterDiff, FieldMetadata(alias="pathParameterDiff")]
    query_parameter_diff: typing_extensions.Annotated[QueryParameterDiff, FieldMetadata(alias="queryParameterDiff")]
    request_body_diff: typing_extensions.Annotated[RequestBodyDiff, FieldMetadata(alias="requestBodyDiff")]
    response_body_diff: typing_extensions.Annotated[ResponseBodyDiff, FieldMetadata(alias="responseBodyDiff")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
