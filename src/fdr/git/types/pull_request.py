# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ...commons.types.url import Url
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .check_run import CheckRun
from .github_user import GithubUser
from .pull_request_reviewer import PullRequestReviewer
from .pull_request_state import PullRequestState


class PullRequest(UniversalBaseModel):
    pull_request_number: typing_extensions.Annotated[int, FieldMetadata(alias="pullRequestNumber")]
    repository_name: typing_extensions.Annotated[str, FieldMetadata(alias="repositoryName")]
    repository_owner: typing_extensions.Annotated[str, FieldMetadata(alias="repositoryOwner")]
    author: typing.Optional[GithubUser] = None
    reviewers: typing.List[PullRequestReviewer]
    title: str
    url: Url
    checks: typing.List[CheckRun]
    state: PullRequestState
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    updated_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="updatedAt")] = None
    merged_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="mergedAt")] = None
    closed_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="closedAt")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
