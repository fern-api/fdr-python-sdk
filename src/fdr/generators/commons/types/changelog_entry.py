# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .changelog_entry_type import ChangelogEntryType


class ChangelogEntry(UniversalBaseModel):
    """
    Following `keep a changelog` format for the entries here. These are effectively your release notes, the strings are meant to be markdown.
    """

    type: ChangelogEntryType
    summary: str
    links: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Any URLs that are relevant to the change, such as a PR or issue. This is optional for backcompat.
    
    You do not always need to specify the URL as the CLI can fill it in with the current PR, but given you can choose to not
    release within the same PR as the change is introduced, this should be specified for divorcing the two.
    """

    upgrade_notes: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="upgradeNotes")] = None
    added: typing.Optional[typing.List[str]] = None
    changed: typing.Optional[typing.List[str]] = None
    deprecated: typing.Optional[typing.List[str]] = None
    removed: typing.Optional[typing.List[str]] = None
    fixed: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
