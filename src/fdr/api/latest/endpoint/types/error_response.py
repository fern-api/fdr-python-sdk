# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from .....core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from .....core.serialization import FieldMetadata
from ...commons.types.with_availability import WithAvailability
from ...commons.types.with_description import WithDescription
from .error_example import ErrorExample


class ErrorResponse(WithDescription, WithAvailability):
    shape: typing.Optional["TypeShape"] = None
    status_code: typing_extensions.Annotated[int, FieldMetadata(alias="statusCode")]
    name: str
    examples: typing.Optional[typing.List[ErrorExample]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ...type.types.type_shape import TypeShape  # noqa: E402, F401, I001

update_forward_refs(ErrorResponse)
