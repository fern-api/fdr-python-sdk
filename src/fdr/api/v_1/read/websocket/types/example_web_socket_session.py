# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ......commons.types.property_key import PropertyKey
from ......core.pydantic_utilities import IS_PYDANTIC_V2
from ......core.serialization import FieldMetadata
from ....commons.types.with_description import WithDescription
from .example_web_socket_message import ExampleWebSocketMessage


class ExampleWebSocketSession(WithDescription):
    name: typing.Optional[str] = None
    path: str
    path_parameters: typing_extensions.Annotated[
        typing.Dict[PropertyKey, typing.Optional[typing.Any]], FieldMetadata(alias="pathParameters")
    ]
    query_parameters: typing_extensions.Annotated[
        typing.Dict[str, typing.Optional[typing.Any]], FieldMetadata(alias="queryParameters")
    ]
    headers: typing.Dict[str, typing.Optional[typing.Any]]
    messages: typing.List[ExampleWebSocketMessage]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
