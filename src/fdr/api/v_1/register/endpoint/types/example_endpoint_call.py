# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ......commons.types.property_key import PropertyKey
from ......core.pydantic_utilities import IS_PYDANTIC_V2
from ......core.serialization import FieldMetadata
from ....commons.types.with_description import WithDescription
from .custom_code_sample import CustomCodeSample
from .example_endpoint_request import ExampleEndpointRequest
from .example_endpoint_response import ExampleEndpointResponse


class ExampleEndpointCall(WithDescription):
    name: typing.Optional[str] = None
    path: str
    path_parameters: typing_extensions.Annotated[
        typing.Dict[PropertyKey, typing.Optional[typing.Any]], FieldMetadata(alias="pathParameters")
    ]
    query_parameters: typing_extensions.Annotated[
        typing.Dict[str, typing.Optional[typing.Any]], FieldMetadata(alias="queryParameters")
    ]
    headers: typing.Dict[str, typing.Optional[typing.Any]]
    request_body: typing_extensions.Annotated[typing.Optional[typing.Any], FieldMetadata(alias="requestBody")] = None
    request_body_v_3: typing_extensions.Annotated[
        typing.Optional[ExampleEndpointRequest], FieldMetadata(alias="requestBodyV3")
    ] = None
    response_status_code: typing_extensions.Annotated[int, FieldMetadata(alias="responseStatusCode")]
    response_body: typing_extensions.Annotated[typing.Optional[typing.Any], FieldMetadata(alias="responseBody")] = None
    response_body_v_3: typing_extensions.Annotated[
        typing.Optional[ExampleEndpointResponse], FieldMetadata(alias="responseBodyV3")
    ] = None
    code_samples: typing_extensions.Annotated[
        typing.Optional[typing.List[CustomCodeSample]], FieldMetadata(alias="codeSamples")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
