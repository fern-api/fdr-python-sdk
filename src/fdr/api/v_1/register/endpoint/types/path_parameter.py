# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ......commons.types.property_key import PropertyKey
from ......core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ....commons.types.with_availability import WithAvailability
from ....commons.types.with_description import WithDescription


class PathParameter(WithDescription, WithAvailability):
    key: PropertyKey
    type: "TypeReference"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ...type.types.type_reference import TypeReference  # noqa: E402, F401, I001

update_forward_refs(PathParameter)
