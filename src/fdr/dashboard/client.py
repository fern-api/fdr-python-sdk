# This file was auto-generated by Fern from our API Definition.

import typing

from ..commons.types.org_id import OrgId
from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from .raw_client import AsyncRawDashboardClient, RawDashboardClient
from .types.get_docs_sites_for_org_response import GetDocsSitesForOrgResponse

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class DashboardClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawDashboardClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawDashboardClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawDashboardClient
        """
        return self._raw_client

    def get_docs_sites_for_org(
        self, *, org_id: OrgId, request_options: typing.Optional[RequestOptions] = None
    ) -> GetDocsSitesForOrgResponse:
        """
        Get all docs sites that belong to a given organization

        Parameters
        ----------
        org_id : OrgId

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GetDocsSitesForOrgResponse

        Examples
        --------
        from fdr import FdrClient

        client = FdrClient(
            token="YOUR_TOKEN",
        )
        client.dashboard.get_docs_sites_for_org(
            org_id="orgId",
        )
        """
        _response = self._raw_client.get_docs_sites_for_org(org_id=org_id, request_options=request_options)
        return _response.data


class AsyncDashboardClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawDashboardClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawDashboardClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawDashboardClient
        """
        return self._raw_client

    async def get_docs_sites_for_org(
        self, *, org_id: OrgId, request_options: typing.Optional[RequestOptions] = None
    ) -> GetDocsSitesForOrgResponse:
        """
        Get all docs sites that belong to a given organization

        Parameters
        ----------
        org_id : OrgId

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        GetDocsSitesForOrgResponse

        Examples
        --------
        import asyncio

        from fdr import AsyncFdrClient

        client = AsyncFdrClient(
            token="YOUR_TOKEN",
        )


        async def main() -> None:
            await client.dashboard.get_docs_sites_for_org(
                org_id="orgId",
            )


        asyncio.run(main())
        """
        _response = await self._raw_client.get_docs_sites_for_org(org_id=org_id, request_options=request_options)
        return _response.data
