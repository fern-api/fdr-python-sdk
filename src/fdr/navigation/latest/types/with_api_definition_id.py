# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....commons.types.api_definition_id import ApiDefinitionId
from ....commons.types.availability import Availability
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata


class WithApiDefinitionId(UniversalBaseModel):
    api_definition_id: typing_extensions.Annotated[ApiDefinitionId, FieldMetadata(alias="apiDefinitionId")]
    availability: typing.Optional[Availability] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
