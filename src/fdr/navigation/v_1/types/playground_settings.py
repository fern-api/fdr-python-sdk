# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....commons.types.environment_id import EnvironmentId
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .playground_button_settings import PlaygroundButtonSettings


class PlaygroundSettings(UniversalBaseModel):
    environments: typing.Optional[typing.List[EnvironmentId]] = pydantic.Field(default=None)
    """
    A list of environment IDs that are allowed to be used in the playground.
    If not provided, all environments are allowed. And if the provided list is empty, the playground should be disabled.
    """

    button: typing.Optional[PlaygroundButtonSettings] = None
    limit_websocket_messages_per_connection: typing_extensions.Annotated[
        typing.Optional[int], FieldMetadata(alias="limit-websocket-messages-per-connection")
    ] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
