# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.serialization import FieldMetadata
from .endpoint_node import EndpointNode
from .with_node_id import WithNodeId


class EndpointPairNode(WithNodeId):
    type: typing.Literal["endpointPair"] = "endpointPair"
    stream: EndpointNode
    non_stream: typing_extensions.Annotated[EndpointNode, FieldMetadata(alias="nonStream")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
