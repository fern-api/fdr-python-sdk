# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ......core.serialization import FieldMetadata
from .content_alignment import ContentAlignment
from .header_position import HeaderPosition
from .page_width_size_config import PageWidthSizeConfig
from .searchbar_placement import SearchbarPlacement
from .size_config import SizeConfig
from .tabs_placement import TabsPlacement


class DocsLayoutConfig(UniversalBaseModel):
    page_width: typing_extensions.Annotated[typing.Optional[PageWidthSizeConfig], FieldMetadata(alias="pageWidth")] = (
        None
    )
    content_width: typing_extensions.Annotated[typing.Optional[SizeConfig], FieldMetadata(alias="contentWidth")] = None
    sidebar_width: typing_extensions.Annotated[typing.Optional[SizeConfig], FieldMetadata(alias="sidebarWidth")] = None
    header_height: typing_extensions.Annotated[typing.Optional[SizeConfig], FieldMetadata(alias="headerHeight")] = None
    searchbar_placement: typing_extensions.Annotated[
        typing.Optional[SearchbarPlacement], FieldMetadata(alias="searchbarPlacement")
    ] = None
    tabs_placement: typing_extensions.Annotated[
        typing.Optional[TabsPlacement], FieldMetadata(alias="tabsPlacement")
    ] = None
    content_alignment: typing_extensions.Annotated[
        typing.Optional[ContentAlignment], FieldMetadata(alias="contentAlignment")
    ] = None
    header_position: typing_extensions.Annotated[
        typing.Optional[HeaderPosition], FieldMetadata(alias="headerPosition")
    ] = None
    disable_header: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="disableHeader")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
