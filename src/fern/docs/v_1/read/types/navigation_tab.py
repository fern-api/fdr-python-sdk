# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from .....commons.types.page_id import PageId
from .....commons.types.url import Url
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from .....core.serialization import FieldMetadata
from .....navigation.v_1.types.changelog_node import ChangelogNode
from .changelog_item import ChangelogItem


class NavigationTab_Group(UniversalBaseModel):
    type: typing.Literal["group"] = "group"
    title: str
    items: typing.List["NavigationItem"]
    skip_url_slug: typing_extensions.Annotated[bool, FieldMetadata(alias="skipUrlSlug")]
    icon: typing.Optional[str] = None
    hidden: typing.Optional[bool] = None
    url_slug: typing_extensions.Annotated[str, FieldMetadata(alias="urlSlug")]
    full_slug: typing_extensions.Annotated[typing.Optional[typing.List[str]], FieldMetadata(alias="fullSlug")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .api_navigation_config_subpackage import ApiNavigationConfigSubpackage  # noqa: E402, F401, I001
from .docs_section import DocsSection  # noqa: E402, F401, I001
from .....navigation.v_1.types.api_package_node import ApiPackageNode  # noqa: E402, F401, I001
from .navigation_item import NavigationItem  # noqa: E402, F401, I001


class NavigationTab_Link(UniversalBaseModel):
    type: typing.Literal["link"] = "link"
    title: str
    icon: typing.Optional[str] = None
    url: Url

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class NavigationTab_Changelog(UniversalBaseModel):
    type: typing.Literal["changelog"] = "changelog"
    title: typing.Optional[str] = None
    description: typing.Optional[str] = None
    page_id: typing_extensions.Annotated[typing.Optional[PageId], FieldMetadata(alias="pageId")] = None
    items: typing.List[ChangelogItem]
    icon: typing.Optional[str] = None
    hidden: typing.Optional[bool] = None
    url_slug: typing_extensions.Annotated[str, FieldMetadata(alias="urlSlug")]
    full_slug: typing_extensions.Annotated[typing.Optional[typing.List[str]], FieldMetadata(alias="fullSlug")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class NavigationTab_ChangelogV3(UniversalBaseModel):
    type: typing.Literal["changelogV3"] = "changelogV3"
    node: ChangelogNode

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


NavigationTab = typing.Union[
    NavigationTab_Group, NavigationTab_Link, NavigationTab_Changelog, NavigationTab_ChangelogV3
]
update_forward_refs(NavigationTab_Group)
