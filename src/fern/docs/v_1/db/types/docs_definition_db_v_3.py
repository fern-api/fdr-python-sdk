# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from .....commons.types.api_definition_id import ApiDefinitionId
from .....commons.types.file_id import FileId
from .....commons.types.page_id import PageId
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from .....core.serialization import FieldMetadata
from ...read.types.page_content import PageContent
from .db_file_info_v_2 import DbFileInfoV2
from .docs_db_config import DocsDbConfig


class DocsDefinitionDbV3(UniversalBaseModel):
    pages: typing.Dict[PageId, PageContent]
    referenced_apis: typing_extensions.Annotated[typing.Set[ApiDefinitionId], FieldMetadata(alias="referencedApis")]
    files: typing.Dict[FileId, DbFileInfoV2]
    config: DocsDbConfig
    js_files: typing_extensions.Annotated[typing.Optional[typing.Dict[str, str]], FieldMetadata(alias="jsFiles")] = (
        pydantic.Field(default=None)
    )
    """
    A map of file names to their contents. 
    The key is the absolute path file name and the value is the file contents.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .docs_section import DocsSection  # noqa: E402, F401, I001
from ...read.types.api_navigation_config_subpackage import ApiNavigationConfigSubpackage  # noqa: E402, F401, I001
from .....navigation.v_1.types.api_package_node import ApiPackageNode  # noqa: E402, F401, I001
from .....navigation.v_1.types.section_node import SectionNode  # noqa: E402, F401, I001

update_forward_refs(DocsDefinitionDbV3)
