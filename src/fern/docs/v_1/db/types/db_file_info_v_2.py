# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....core.serialization import FieldMetadata


class DbFileInfoV2_S3Key(UniversalBaseModel):
    type: typing.Literal["s3Key"] = "s3Key"
    s_3_key: typing_extensions.Annotated[str, FieldMetadata(alias="s3Key")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class DbFileInfoV2_Image(UniversalBaseModel):
    type: typing.Literal["image"] = "image"
    s_3_key: typing_extensions.Annotated[str, FieldMetadata(alias="s3Key")]
    width: float
    height: float
    blur_data_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="blurDataUrl")] = None
    alt: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


DbFileInfoV2 = typing.Union[DbFileInfoV2_S3Key, DbFileInfoV2_Image]
