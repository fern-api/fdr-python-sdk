# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....core.serialization import FieldMetadata


class NavigationNodeMetadata(UniversalBaseModel):
    icon: typing.Optional[str] = None
    hidden: typing.Optional[bool] = None
    url_slug_override: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="urlSlugOverride")] = (
        pydantic.Field(default=None)
    )
    """
    Optional slug to override the generated slug, which is `kebabCase(title)`. This is ignored if `fullSlug` is provided.
    """

    full_slug: typing_extensions.Annotated[typing.Optional[typing.List[str]], FieldMetadata(alias="fullSlug")] = (
        pydantic.Field(default=None)
    )
    """
    If provided, ignores `urlSlugOverride`, and its parent slugs, and instead uses `/${basepath}/${fullSlug.join('/')}` this page's pathname.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
