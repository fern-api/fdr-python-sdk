# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class PageWidthSizeConfig_Px(UniversalBaseModel):
    value: float
    type: typing.Literal["px"] = "px"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class PageWidthSizeConfig_Rem(UniversalBaseModel):
    value: float
    type: typing.Literal["rem"] = "rem"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class PageWidthSizeConfig_Full(UniversalBaseModel):
    type: typing.Literal["full"] = "full"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


PageWidthSizeConfig = typing.Union[PageWidthSizeConfig_Px, PageWidthSizeConfig_Rem, PageWidthSizeConfig_Full]
