# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from .....commons.types.org_id import OrgId
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....core.serialization import FieldMetadata
from ....v_1.read.types.docs_definition import DocsDefinition
from .base_url import BaseUrl


class LoadDocsForUrlResponse(UniversalBaseModel):
    org_id: typing_extensions.Annotated[OrgId, FieldMetadata(alias="orgId")]
    base_url: typing_extensions.Annotated[BaseUrl, FieldMetadata(alias="baseUrl")]
    definition: DocsDefinition
    light_mode_enabled: typing_extensions.Annotated[bool, FieldMetadata(alias="lightModeEnabled")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
