# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class CheckRun(UniversalBaseModel):
    check_id: typing_extensions.Annotated[str, FieldMetadata(alias="checkId")]
    repository_owner: typing_extensions.Annotated[str, FieldMetadata(alias="repositoryOwner")]
    repository_name: typing_extensions.Annotated[str, FieldMetadata(alias="repositoryName")]
    ref: str
    name: str
    status: str
    conclusion: str
    check_run_url: typing_extensions.Annotated[str, FieldMetadata(alias="checkRunUrl")]
    created_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="createdAt")]
    completed_at: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="completedAt")] = None
    raw_check_run: typing_extensions.Annotated[typing.Optional[typing.Any], FieldMetadata(alias="rawCheckRun")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
