# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata


class PullRequestReviewer_User(UniversalBaseModel):
    type: typing.Literal["user"] = "user"
    name: typing.Optional[str] = None
    email: typing.Optional[str] = None
    username: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class PullRequestReviewer_Team(UniversalBaseModel):
    type: typing.Literal["team"] = "team"
    name: str
    team_id: typing_extensions.Annotated[str, FieldMetadata(alias="teamId")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


PullRequestReviewer = typing.Union[PullRequestReviewer_User, PullRequestReviewer_Team]
