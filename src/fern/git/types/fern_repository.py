# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ...commons.types.org_id import OrgId
from ...commons.types.url import Url
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .check_run import CheckRun
from .repository_id import RepositoryId


class FernRepository_Sdk(UniversalBaseModel):
    type: typing.Literal["sdk"] = "sdk"
    sdk_language: typing_extensions.Annotated[str, FieldMetadata(alias="sdkLanguage")]
    id: RepositoryId
    name: str
    owner: str
    full_name: typing_extensions.Annotated[str, FieldMetadata(alias="fullName")]
    url: Url
    repository_owner_organization_id: typing_extensions.Annotated[
        OrgId, FieldMetadata(alias="repositoryOwnerOrganizationId")
    ]
    default_branch_checks: typing_extensions.Annotated[
        typing.List[CheckRun], FieldMetadata(alias="defaultBranchChecks")
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class FernRepository_Config(UniversalBaseModel):
    type: typing.Literal["config"] = "config"
    id: RepositoryId
    name: str
    owner: str
    full_name: typing_extensions.Annotated[str, FieldMetadata(alias="fullName")]
    url: Url
    repository_owner_organization_id: typing_extensions.Annotated[
        OrgId, FieldMetadata(alias="repositoryOwnerOrganizationId")
    ]
    default_branch_checks: typing_extensions.Annotated[
        typing.List[CheckRun], FieldMetadata(alias="defaultBranchChecks")
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


FernRepository = typing.Union[FernRepository_Sdk, FernRepository_Config]
