# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from .payload_location import PayloadLocation


class TemplateInput_Template(UniversalBaseModel):
    value: "Template"
    type: typing.Literal["template"] = "template"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class TemplateInput_Payload(UniversalBaseModel):
    type: typing.Literal["payload"] = "payload"
    location: PayloadLocation
    path: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


TemplateInput = typing.Union[TemplateInput_Template, TemplateInput_Payload]
from .template import Template  # noqa: E402, F401, I001

update_forward_refs(TemplateInput_Template)
