# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from .....commons.types.endpoint_id import EndpointId
from .....commons.types.environment_id import EnvironmentId
from .....commons.types.http_method import HttpMethod
from .....core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from .....core.serialization import FieldMetadata
from ...auth.types.auth_scheme_id import AuthSchemeId
from ...commons.types.environment import Environment
from ...commons.types.path_part import PathPart
from ...commons.types.with_availability import WithAvailability
from ...commons.types.with_description import WithDescription
from ...commons.types.with_namespace import WithNamespace
from .endpoint_snippet_templates import EndpointSnippetTemplates
from .error_response import ErrorResponse
from .example_endpoint_call import ExampleEndpointCall
from .http_request import HttpRequest
from .http_response import HttpResponse
from .protocol import Protocol


class EndpointDefinition(WithDescription, WithAvailability, WithNamespace):
    id: EndpointId
    method: HttpMethod
    path: typing.List[PathPart]
    display_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="displayName")] = None
    operation_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="operationId")] = None
    auth: typing.Optional[typing.List[AuthSchemeId]] = None
    default_environment: typing_extensions.Annotated[
        typing.Optional[EnvironmentId], FieldMetadata(alias="defaultEnvironment")
    ] = None
    environments: typing.Optional[typing.List[Environment]] = None
    path_parameters: typing_extensions.Annotated[
        typing.Optional[typing.List["ObjectProperty"]], FieldMetadata(alias="pathParameters")
    ] = None
    query_parameters: typing_extensions.Annotated[
        typing.Optional[typing.List["ObjectProperty"]], FieldMetadata(alias="queryParameters")
    ] = None
    request_headers: typing_extensions.Annotated[
        typing.Optional[typing.List["ObjectProperty"]], FieldMetadata(alias="requestHeaders")
    ] = None
    response_headers: typing_extensions.Annotated[
        typing.Optional[typing.List["ObjectProperty"]], FieldMetadata(alias="responseHeaders")
    ] = None
    requests: typing.Optional[typing.List[HttpRequest]] = None
    responses: typing.Optional[typing.List[HttpResponse]] = None
    errors: typing.Optional[typing.List[ErrorResponse]] = None
    examples: typing.Optional[typing.List[ExampleEndpointCall]] = None
    snippet_templates: typing_extensions.Annotated[
        typing.Optional[EndpointSnippetTemplates], FieldMetadata(alias="snippetTemplates")
    ] = None
    protocol: typing.Optional[Protocol] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ...type.types.discriminated_union_type import DiscriminatedUnionType  # noqa: E402, F401, I001
from ...type.types.discriminated_union_variant import DiscriminatedUnionVariant  # noqa: E402, F401, I001
from ...type.types.list_type import ListType as api_latest_type_types_list_type_ListType  # noqa: E402, F401, I001
from ...type.types.map_type import MapType as api_latest_type_types_map_type_MapType  # noqa: E402, F401, I001
from ...type.types.nullable_type import NullableType as api_latest_type_types_nullable_type_NullableType  # noqa: E402, F401, I001
from ...type.types.object_property import ObjectProperty  # noqa: E402, F401, I001
from ...type.types.object_type import ObjectType  # noqa: E402, F401, I001
from ...type.types.optional_type import OptionalType as api_latest_type_types_optional_type_OptionalType  # noqa: E402, F401, I001
from ...type.types.set_type import SetType as api_latest_type_types_set_type_SetType  # noqa: E402, F401, I001
from ...type.types.undiscriminated_union_type import UndiscriminatedUnionType  # noqa: E402, F401, I001
from ...type.types.undiscriminated_union_variant import UndiscriminatedUnionVariant  # noqa: E402, F401, I001
from ....v_1.read.type.types.list_type import ListType as api_v_1_read_type_types_list_type_ListType  # noqa: E402, F401, I001
from ....v_1.read.type.types.map_type import MapType as api_v_1_read_type_types_map_type_MapType  # noqa: E402, F401, I001
from ....v_1.read.type.types.nullable_type import NullableType as api_v_1_read_type_types_nullable_type_NullableType  # noqa: E402, F401, I001
from ....v_1.read.type.types.optional_type import OptionalType as api_v_1_read_type_types_optional_type_OptionalType  # noqa: E402, F401, I001
from ....v_1.read.type.types.set_type import SetType as api_v_1_read_type_types_set_type_SetType  # noqa: E402, F401, I001
from .....templates.types.dict_template import DictTemplate  # noqa: E402, F401, I001
from .....templates.types.discriminated_union_template import DiscriminatedUnionTemplate  # noqa: E402, F401, I001
from .....templates.types.generic_template import GenericTemplate  # noqa: E402, F401, I001
from .....templates.types.iterable_template import IterableTemplate  # noqa: E402, F401, I001
from .....templates.types.union_template import UnionTemplate  # noqa: E402, F401, I001
from .....templates.types.union_template_member import UnionTemplateMember  # noqa: E402, F401, I001
from .....templates.types.union_template_v_2 import UnionTemplateV2  # noqa: E402, F401, I001

update_forward_refs(EndpointDefinition)
