# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ......commons.types.endpoint_id import EndpointId
from ......commons.types.environment_id import EnvironmentId
from ......commons.types.http_method import HttpMethod
from ......core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ......core.serialization import FieldMetadata
from ....commons.types.environment import Environment
from ....commons.types.protocol import Protocol
from ....commons.types.with_availability import WithAvailability
from ....commons.types.with_description import WithDescription
from .endpoint_path import EndpointPath
from .endpoint_snippet_templates import EndpointSnippetTemplates
from .error_declaration import ErrorDeclaration
from .error_declaration_v_2 import ErrorDeclarationV2
from .example_endpoint_call import ExampleEndpointCall
from .header import Header
from .http_request import HttpRequest
from .http_requests_v_2 import HttpRequestsV2
from .http_response import HttpResponse
from .http_responses_v_2 import HttpResponsesV2
from .query_parameter import QueryParameter


class EndpointDefinition(WithDescription, WithAvailability):
    authed: bool = pydantic.Field()
    """
    When this is true, the api definition will have a union for auth
    """

    default_environment: typing_extensions.Annotated[
        typing.Optional[EnvironmentId], FieldMetadata(alias="defaultEnvironment")
    ] = None
    environments: typing.List[Environment]
    method: HttpMethod
    id: EndpointId
    original_endpoint_id: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="originalEndpointId")
    ] = None
    url_slug: typing_extensions.Annotated[str, FieldMetadata(alias="urlSlug")]
    migrated_from_url_slugs: typing_extensions.Annotated[
        typing.Optional[typing.List[str]], FieldMetadata(alias="migratedFromUrlSlugs")
    ] = None
    name: typing.Optional[str] = None
    path: EndpointPath
    query_parameters: typing_extensions.Annotated[typing.List[QueryParameter], FieldMetadata(alias="queryParameters")]
    headers: typing.List[Header]
    request: typing.Optional[HttpRequest] = None
    requests_v_2: typing_extensions.Annotated[typing.Optional[HttpRequestsV2], FieldMetadata(alias="requestsV2")] = None
    response: typing.Optional[HttpResponse] = None
    responses_v_2: typing_extensions.Annotated[typing.Optional[HttpResponsesV2], FieldMetadata(alias="responsesV2")] = (
        None
    )
    errors: typing.List[ErrorDeclaration]
    errors_v_2: typing_extensions.Annotated[
        typing.Optional[typing.List[ErrorDeclarationV2]], FieldMetadata(alias="errorsV2")
    ] = None
    examples: typing.List[ExampleEndpointCall]
    snippet_templates: typing_extensions.Annotated[
        typing.Optional[EndpointSnippetTemplates], FieldMetadata(alias="snippetTemplates")
    ] = None
    protocol: typing.Optional[Protocol] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ...type.types.list_type import ListType  # noqa: E402, F401, I001
from ...type.types.map_type import MapType  # noqa: E402, F401, I001
from ...type.types.nullable_type import NullableType  # noqa: E402, F401, I001
from ...type.types.optional_type import OptionalType  # noqa: E402, F401, I001
from ...type.types.set_type import SetType  # noqa: E402, F401, I001
from ......templates.types.dict_template import DictTemplate  # noqa: E402, F401, I001
from ......templates.types.discriminated_union_template import DiscriminatedUnionTemplate  # noqa: E402, F401, I001
from ......templates.types.generic_template import GenericTemplate  # noqa: E402, F401, I001
from ......templates.types.iterable_template import IterableTemplate  # noqa: E402, F401, I001
from ......templates.types.union_template import UnionTemplate  # noqa: E402, F401, I001
from ......templates.types.union_template_member import UnionTemplateMember  # noqa: E402, F401, I001
from ......templates.types.union_template_v_2 import UnionTemplateV2  # noqa: E402, F401, I001

update_forward_refs(EndpointDefinition)
