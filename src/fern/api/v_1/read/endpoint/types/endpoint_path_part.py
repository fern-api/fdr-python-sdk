# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ......commons.types.property_key import PropertyKey
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class EndpointPathPart_Literal(UniversalBaseModel):
    value: str
    type: typing.Literal["literal"] = "literal"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class EndpointPathPart_PathParameter(UniversalBaseModel):
    value: PropertyKey
    type: typing.Literal["pathParameter"] = "pathParameter"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


EndpointPathPart = typing.Union[EndpointPathPart_Literal, EndpointPathPart_PathParameter]
