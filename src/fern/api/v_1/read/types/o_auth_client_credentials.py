# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from .....commons.types.endpoint_id import EndpointId
from .....commons.types.jq_string import JqString
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....core.serialization import FieldMetadata


class OAuthClientCredentials_ReferencedEndpoint(UniversalBaseModel):
    type: typing.Literal["referencedEndpoint"] = "referencedEndpoint"
    endpoint_id: typing_extensions.Annotated[EndpointId, FieldMetadata(alias="endpointId")]
    access_token_locator: typing_extensions.Annotated[JqString, FieldMetadata(alias="accessTokenLocator")]
    header_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="headerName")] = None
    token_prefix: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="tokenPrefix")] = None
    description: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


OAuthClientCredentials = OAuthClientCredentials_ReferencedEndpoint
