# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from .....commons.types.type_id import TypeId
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....core.serialization import FieldMetadata
from ...commons.types.subpackage_id import SubpackageId
from ..endpoint.types.endpoint_definition import EndpointDefinition
from ..webhook.types.webhook_definition import WebhookDefinition
from ..websocket.types.web_socket_channel import WebSocketChannel


class ApiDefinitionPackage(UniversalBaseModel):
    endpoints: typing.List[EndpointDefinition]
    websockets: typing.List[WebSocketChannel]
    webhooks: typing.List[WebhookDefinition]
    types: typing.List[TypeId]
    subpackages: typing.List[SubpackageId]
    points_to: typing_extensions.Annotated[typing.Optional[SubpackageId], FieldMetadata(alias="pointsTo")] = (
        pydantic.Field(default=None)
    )
    """
    if present, this package should be replaced with the provided subpackage
    in the docs navigation.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
