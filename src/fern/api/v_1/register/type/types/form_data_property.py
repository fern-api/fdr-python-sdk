# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ......commons.types.availability import Availability
from ......commons.types.property_key import PropertyKey
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ......core.serialization import FieldMetadata
from .content_type import ContentType
from .form_data_file_property import FormDataFileProperty
from .object_property_access import ObjectPropertyAccess


class FormDataProperty_File(UniversalBaseModel):
    value: FormDataFileProperty
    type: typing.Literal["file"] = "file"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class FormDataProperty_BodyProperty(UniversalBaseModel):
    type: typing.Literal["bodyProperty"] = "bodyProperty"
    content_type: typing_extensions.Annotated[typing.Optional[ContentType], FieldMetadata(alias="contentType")] = None
    exploded: typing.Optional[bool] = None
    key: PropertyKey
    value_type: typing_extensions.Annotated["TypeReference", FieldMetadata(alias="valueType")]
    property_access: typing_extensions.Annotated[
        typing.Optional[ObjectPropertyAccess], FieldMetadata(alias="propertyAccess")
    ] = None
    description: typing.Optional[str] = None
    availability: typing.Optional[Availability] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .list_type import ListType  # noqa: E402, F401, I001
from .map_type import MapType  # noqa: E402, F401, I001
from .nullable_type import NullableType  # noqa: E402, F401, I001
from .optional_type import OptionalType  # noqa: E402, F401, I001
from .set_type import SetType  # noqa: E402, F401, I001
from .type_reference import TypeReference  # noqa: E402, F401, I001

FormDataProperty = typing.Union[FormDataProperty_File, FormDataProperty_BodyProperty]
update_forward_refs(FormDataProperty_BodyProperty)
