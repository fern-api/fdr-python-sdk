# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .....core.serialization import FieldMetadata
from .go_module import GoModule
from .java_coordinate import JavaCoordinate
from .nuget_package import NugetPackage
from .python_package import PythonPackage
from .ruby_gem import RubyGem
from .typescript_package import TypescriptPackage


class SnippetsConfig(UniversalBaseModel):
    typescript_sdk: typing_extensions.Annotated[
        typing.Optional[TypescriptPackage], FieldMetadata(alias="typescriptSdk")
    ] = None
    python_sdk: typing_extensions.Annotated[typing.Optional[PythonPackage], FieldMetadata(alias="pythonSdk")] = None
    go_sdk: typing_extensions.Annotated[typing.Optional[GoModule], FieldMetadata(alias="goSdk")] = None
    java_sdk: typing_extensions.Annotated[typing.Optional[JavaCoordinate], FieldMetadata(alias="javaSdk")] = None
    ruby_sdk: typing_extensions.Annotated[typing.Optional[RubyGem], FieldMetadata(alias="rubySdk")] = None
    csharp_sdk: typing_extensions.Annotated[typing.Optional[NugetPackage], FieldMetadata(alias="csharpSdk")] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
