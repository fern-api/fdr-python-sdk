# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from .....commons.types.type_id import TypeId
from .....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from .....core.serialization import FieldMetadata
from ...commons.types.subpackage_id import SubpackageId
from ..endpoint.types.header import Header
from ..type.types.type_definition import TypeDefinition
from .api_auth import ApiAuth
from .api_definition_package import ApiDefinitionPackage
from .api_definition_subpackage import ApiDefinitionSubpackage
from .api_navigation_config_root import ApiNavigationConfigRoot
from .snippets_config import SnippetsConfig


class ApiDefinition(UniversalBaseModel):
    root_package: typing_extensions.Annotated[ApiDefinitionPackage, FieldMetadata(alias="rootPackage")]
    types: typing.Dict[TypeId, TypeDefinition]
    subpackages: typing.Dict[SubpackageId, ApiDefinitionSubpackage]
    auth: typing.Optional[ApiAuth] = None
    global_headers: typing_extensions.Annotated[
        typing.Optional[typing.List[Header]], FieldMetadata(alias="globalHeaders")
    ] = None
    snippets_configuration: typing_extensions.Annotated[
        typing.Optional[SnippetsConfig], FieldMetadata(alias="snippetsConfiguration")
    ] = None
    navigation: typing.Optional[ApiNavigationConfigRoot] = pydantic.Field(default=None)
    """
    Use the docs navigation instead.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ..type.types.list_type import ListType  # noqa: E402, F401, I001
from ..type.types.map_type import MapType  # noqa: E402, F401, I001
from ..type.types.nullable_type import NullableType  # noqa: E402, F401, I001
from ..type.types.optional_type import OptionalType  # noqa: E402, F401, I001
from ..type.types.set_type import SetType  # noqa: E402, F401, I001
from .api_navigation_config_subpackage import ApiNavigationConfigSubpackage  # noqa: E402, F401, I001

update_forward_refs(ApiDefinition)
