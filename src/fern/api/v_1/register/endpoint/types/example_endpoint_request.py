# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ......core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .bytes_value import BytesValue
from .form_value import FormValue


class ExampleEndpointRequest_Json(UniversalBaseModel):
    value: typing.Optional[typing.Any] = None
    type: typing.Literal["json"] = "json"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class ExampleEndpointRequest_Form(UniversalBaseModel):
    value: typing.Dict[str, FormValue]
    type: typing.Literal["form"] = "form"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class ExampleEndpointRequest_Bytes(UniversalBaseModel):
    value: BytesValue
    type: typing.Literal["bytes"] = "bytes"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


ExampleEndpointRequest = typing.Union[
    ExampleEndpointRequest_Json, ExampleEndpointRequest_Form, ExampleEndpointRequest_Bytes
]
