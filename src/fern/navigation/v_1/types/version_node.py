# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....commons.types.version_id import VersionId
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.serialization import FieldMetadata
from .landing_page_node import LandingPageNode
from .navigation_v_1_availability import NavigationV1Availability
from .version_child import VersionChild
from .with_node_metadata import WithNodeMetadata
from .with_redirect import WithRedirect


class VersionNode(WithNodeMetadata, WithRedirect):
    type: typing.Literal["version"] = "version"
    default: bool
    version_id: typing_extensions.Annotated[VersionId, FieldMetadata(alias="versionId")]
    child: VersionChild
    availability: typing.Optional[NavigationV1Availability] = None
    landing_page: typing_extensions.Annotated[typing.Optional[LandingPageNode], FieldMetadata(alias="landingPage")] = (
        None
    )

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
