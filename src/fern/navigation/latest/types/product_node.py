# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ....commons.types.file_id import FileId
from ....core.pydantic_utilities import IS_PYDANTIC_V2, update_forward_refs
from ....core.serialization import FieldMetadata
from .product_child import ProductChild
from .product_id import ProductId
from .with_node_metadata import WithNodeMetadata
from .with_redirect import WithRedirect


class ProductNode(WithNodeMetadata, WithRedirect):
    type: typing.Literal["product"] = "product"
    default: bool
    product_id: typing_extensions.Annotated[ProductId, FieldMetadata(alias="productId")]
    child: ProductChild
    subtitle: str = pydantic.Field()
    """
    Couple words for what the product is
    """

    image: typing.Optional[FileId] = pydantic.Field(default=None)
    """
    A URL to an image that will be displayed in the sidebar. Takes precedence over `icon` if both are provided.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from .api_package_node import ApiPackageNode  # noqa: E402, F401, I001
from .section_node import SectionNode  # noqa: E402, F401, I001

update_forward_refs(ProductNode)
