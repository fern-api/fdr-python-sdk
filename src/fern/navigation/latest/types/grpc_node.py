# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....commons.types.grpc_id import GrpcId
from ....commons.types.grpc_method import GrpcMethod
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.serialization import FieldMetadata
from .with_api_definition_id import WithApiDefinitionId
from .with_node_metadata import WithNodeMetadata


class GrpcNode(WithNodeMetadata, WithApiDefinitionId):
    type: typing.Literal["grpc"] = "grpc"
    method: GrpcMethod
    grpc_id: typing_extensions.Annotated[GrpcId, FieldMetadata(alias="grpcId")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
