# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2
from ....core.serialization import FieldMetadata
from .slug import Slug
from .with_feature_flags import WithFeatureFlags
from .with_node_id import WithNodeId
from .with_permissions import WithPermissions


class WithNodeMetadata(WithNodeId, WithPermissions, WithFeatureFlags):
    title: str = pydantic.Field()
    """
    This is the title that will be displayed in the sidebar. Unlike the h1 or SEO headline, this should be short and concise.
    Do NOT use this property for the h1 of the page, the SEO headline, or search results, unless they are omitted. (This title should only be used as a fallback)
    
    #### Order of precedence:
    ```
    sidebarNode.text = nav.title;
    <h1> = frontmatter.title ?? mdx.h1[0] ?? sidebarNode.text;
    <title> = frontmatter.headline ?? <h1>;
    ```
    """

    slug: Slug
    canonical_slug: typing_extensions.Annotated[typing.Optional[Slug], FieldMetadata(alias="canonicalSlug")] = (
        pydantic.Field(default=None)
    )
    """
    The slug that should be used in the canonical URL rel. If not provided, the `slug` will be used.
    """

    icon: typing.Optional[str] = None
    hidden: typing.Optional[bool] = pydantic.Field(default=None)
    """
    If true, this node will not be displayed in the sidebar, and noindex will be considered true.
    """

    authed: typing.Optional[bool] = pydantic.Field(default=None)
    """
    If true, this node is only visible to authenticated users.
    If false, this node is only visible to all users (including anonymous).
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
